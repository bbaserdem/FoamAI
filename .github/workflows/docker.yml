name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
    paths:
      # Docker-related files
      - 'docker/**'
      - 'src/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'requirements.txt'
      - 'docker-compose.yml'
      # Workflow itself
      - '.github/workflows/docker.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      # Docker-related files
      - 'docker/**'
      - 'src/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'requirements.txt'
      - 'docker-compose.yml'
      # Workflow itself
      - '.github/workflows/docker.yml'

env:
  REGISTRY: ghcr.io
  DOCKER_ORG: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - name: openfoam
            dockerfile: docker/openfoam/Dockerfile
            context: .
          - name: api
            dockerfile: docker/api/Dockerfile
            context: .
          - name: pvserver
            dockerfile: docker/pvserver/Dockerfile
            context: .
    
    permissions:
      contents: read
      packages: write
      id-token: write  # This can help with authentication

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        # Alternative: Use a PAT if GITHUB_TOKEN doesn't work
        # password: ${{ secrets.GHCR_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/foamai/${{ matrix.service.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}

  # Security scanning job (optional but recommended)
  security-scan:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        service: [openfoam, api, pvserver]
    
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/foamai/${{ matrix.service }}:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  # Summary job to provide build status
  build-summary:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    
    steps:
    - name: Build Summary
      run: |
        echo "## Docker Build Summary 🐳" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Service | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| OpenFOAM | ${{ needs.build.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| API | ${{ needs.build.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| ParaView Server | ${{ needs.build.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event_name }}" != "pull_request" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Published Images 📦" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ env.DOCKER_ORG }}/foamai/openfoam:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ env.DOCKER_ORG }}/foamai/api:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ env.DOCKER_ORG }}/foamai/pvserver:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- Tagged with commit SHA: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        fi